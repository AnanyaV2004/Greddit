[{"/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/index.js":"1","/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/App.js":"2","/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/FollowersList.js":"3","/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/FollowingList.js":"4","/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/LogIn.js":"5","/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/AddPublicPost.js":"6","/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/Post_moderator.js":"7","/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/Profile.js":"8","/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/Post_review.js":"9","/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/AllPosts.js":"10","/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/report.js":"11","/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/Post_follower.js":"12","/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/Followers_followings.js":"13"},{"size":468,"mtime":1691747996850,"results":"14","hashOfConfig":"15"},{"size":1466,"mtime":1691747996850,"results":"16","hashOfConfig":"15"},{"size":1806,"mtime":1691747996850,"results":"17","hashOfConfig":"15"},{"size":3765,"mtime":1691747996850,"results":"18","hashOfConfig":"15"},{"size":7465,"mtime":1691747996850,"results":"19","hashOfConfig":"15"},{"size":11337,"mtime":1691747996846,"results":"20","hashOfConfig":"15"},{"size":12788,"mtime":1691747996850,"results":"21","hashOfConfig":"15"},{"size":9949,"mtime":1691747996850,"results":"22","hashOfConfig":"15"},{"size":1245,"mtime":1691747996850,"results":"23","hashOfConfig":"15"},{"size":10396,"mtime":1691747996850,"results":"24","hashOfConfig":"15"},{"size":4343,"mtime":1691747996850,"results":"25","hashOfConfig":"15"},{"size":14928,"mtime":1691747996850,"results":"26","hashOfConfig":"15"},{"size":918,"mtime":1691747996850,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"152ozgn",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/index.js",[],[],"/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/App.js",["78","79"],[],"import './App.css';\n// import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route,Routes } from 'react-router-dom';\nimport LogIn from './LogIn';\nimport Profile from './Profile'\nimport FollowersList from './FollowersList.js';\nimport FollowingList from './FollowingList.js';\nimport AddPublicPost from './AddPublicPost';\nimport AllPosts from './AllPosts';\nimport Post from './Post_moderator';\nimport Post_review from './Post_review';\nimport Post_follower from './Post_follower';\nimport Report from './report';\n\nfunction App() {\n\n  return (\n    // <div className=\"App\">\n    //   <LogIn></LogIn>\n    // </div>\n    <Router>\n      <div className=\"App\">\n        <Routes >\n            <Route exact path=\"/\" element={ <LogIn/>}></Route>\n            <Route path=\"/profile\" element={<Profile/>}></Route>\n            <Route path=\"/followers\" element={<FollowersList/>}></Route>\n            <Route path=\"/followings\" element={<FollowingList/>}></Route>\n            <Route path=\"/publicPost\" element={<AddPublicPost/>}></Route>\n            <Route path=\"/AllPosts\" element={<AllPosts/>}></Route>\n            <Route path=\"/post/:id\" element={<Post/>}></Route>\n            <Route path=\"/review_post/:id\" element={<Post_review/>}></Route>\n            <Route path=\"/follower_post/:id\" element={<Post_follower/>}></Route>\n            <Route path=\"/post/:id/:idx\" element={<Report/>}></Route>\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/FollowersList.js",["80"],[],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect } from 'react';\n\nfunction FollowersList() {\n\n    const [followers, setFollowers] = useState([]);\n    let [count , setCount] = useState(0);\n    useEffect(()=>{\n        var username = localStorage.getItem(\"username\");\n        let x = {username};\n\n        axios.post('http://localhost:5000/getfollowers', x)\n        .then(response => {\n            // console.log(response.data);\n            setFollowers(JSON.parse(JSON.stringify(response.data))); \n        })\n        .catch(error => {\n          console.error(error);\n        }); \n    },[count])\n\n\n    function handleRemoveFollower(follower) {\n        var username = localStorage.getItem(\"username\");\n        var remove = follower.username;\n        let x = {username , remove} ;\n        axios.post('http://localhost:5000/removefollower', x)\n        .then(response => {\n            console.log(\"removed\");\n            setCount(count+1);\n            // window.location.reload(false);\n        })\n        .catch(error => {\n          console.error(error);\n        }); \n    }\n\n    return (\n        <div>\n        {/* <h2>Followers</h2> */}\n        <div class=\"list-group pt-5\">\n        <li  class=\"list-group-item list-group-item-action active h1 \" >Followers</li>\n            {followers.map(follower => (\n                <li  class=\"list-group-item list-group-item-action list-group-item-warning h5\"  key={follower.id}>\n                    {follower.username}\n                    <button class=\"btn ms-3 btn-primary\" onClick={() => handleRemoveFollower(follower)}>\n                    Remove\n                    </button>\n                </li>\n            ))}\n        </div>\n        </div>\n    );\n}\n\nexport default FollowersList;\n","/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/FollowingList.js",["81","82","83"],[],"import React, { useState } from 'react';\nimport axios from 'axios';\n// import { useNavigate } from \"react-router-dom\";\nimport { useEffect } from 'react';\n\nfunction FollowingList() {\n\n    const [followings, setFollowings] = useState([]);\n    const [others , setOthers] = useState([]);\n    const [all , setAll] = useState([]);\n    const [count , setCount] = useState(0);\n    useEffect(()=>{\n        var username = localStorage.getItem(\"username\");\n        let x = {username};\n\n        axios.post('http://localhost:5000/getfollowing', x)\n        .then(response => {\n            console.log(response.data);\n            setFollowings(JSON.parse(JSON.stringify(response.data))); \n            console.log(\"1->followigns->\"+followings);\n            axios.post('http://localhost:5000/getalldata')\n            .then(response => {\n                setAll(JSON.parse(JSON.stringify(response.data))); \n            })\n            .catch(error => {\n            console.error(error);\n            }); \n\n        })\n        .catch(error => {\n          console.error(error);\n        }); \n    },[count])\n\n    // const navigate = useNavigate();\n    useEffect(()=>{\n        console.log(\"2temp->\"+others+\"\\nfoloowings\"+followings);\n        let other = all.filter(member => {\n            return !followings.some(following => following.username === member.username);\n          });\n        setOthers(other);\n        // navigate(\"/followings\"); \n          \n    },[all])\n\n    // useEffect(()=>{\n    //     window.location.reload(false)\n    // },[others])    \n    function handleRemoveFollowings(following) {\n        var username = localStorage.getItem(\"username\");\n        var remove = following.username;\n        let x = {username , remove} ;\n        axios.post('http://localhost:5000/removefollowing', x)\n        .then(response => {\n            console.log(\"removed\");\n            setCount(count+1);\n            // window.location.reload(false);\n        })\n        .catch(error => {\n          console.error(error);\n        }); \n    }\n\n    function handleaAddFollowings(other){\n        var username = localStorage.getItem(\"username\");\n        var other = other.username;\n        let x = {username , other} ;\n        \n        axios.post('http://localhost:5000/addfollowing', x)\n            .then(response => {\n                // setFollowings(JSON.parse(JSON.stringify(response.data))); \n                // navigate(\"/followings\");\n                console.log(\"added\");\n                setCount(count+1);\n                // window.location.reload(false)                \n            })\n            .catch(error => {\n            console.error(error);\n        }); \n    }\n\n\n    return (\n        <div>\n      \n        <div class=\"list-group pt-5\">\n        <li  class=\"list-group-item list-group-item-action active h1\" >Followings</li>\n            { followings.map(following => (//those who I follow.\n            <li key = {following.id} class=\"list-group-item list-group-item-action list-group-item-warning h5\" >\n                {following.username}\n                <button class=\"btn ms-3 btn-primary\" onClick={() => handleRemoveFollowings(following)}>\n                Unfollow\n                </button>\n            </li>\n            ))}\n\n        <li  class=\"list-group-item list-group-item-action active h1\" >Others on our database</li>\n            { others.map(other => (//those who I can follow.\n            <li key={other.id}class=\"list-group-item list-group-item-action list-group-item-warning h5\">\n                {other.username}\n                <button class=\"float-right btn ms-3 btn-primary\" onClick={() => handleaAddFollowings(other)}>\n                Follow\n                </button>\n            </li>\n            ))}\n        </div>\n        </div>\n    );\n}\n\nexport default FollowingList;\n","/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/LogIn.js",["84"],[],"import React, { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect } from 'react';\nimport axios from 'axios';\nvar bcrypt = require('bcryptjs');\n\n// import {export}\nconst LogIn = () => {\n\n    const navigate2 = useNavigate();\n\n    useEffect(() => {\n        if(localStorage.getItem(\"isLogedIn\") === \"true\"){\n          navigate(\"/profile\");\n        }\n    })\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate();\n    \n\n    const handleLogIn = (event) => {\n      event.preventDefault();\n      let x = {username , password};\n      // console.log(x);\n      axios.post('http://localhost:5000/yourlogin', x)\n        .then(response => {\n          var getUserData = response.data;\n          console.log(response.data);\n          var pass_got = getUserData.password;\n\n          if(bcrypt.compareSync(x.password , pass_got)){\n            localStorage.setItem(\"username\",getUserData.username); \n            localStorage.setItem(\"isLogedIn\",\"true\");\n            navigate(\"/profile\");\n          }\n          else{\n            window.location.reload(false); \n          }\n          \n        })\n        .catch(error => {\n          console.error(error);\n        });\n    };\n\n    \n    const [formData, setFormData] = useState({});\n\n    const handleChange = (event) => {\n      setFormData({ ...formData, [event.target.name]: event.target.value });\n    }\n\n\n    const handleSignUp = (event) => {\n      event.preventDefault();\n      console.log(formData);\n\n      axios.post('http://localhost:5000/yoursingup', formData)\n        .then(response => {\n          console.log(response.formData);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n\n      window.location.reload(false);\n    }\n    return ( \n        <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"row full-height justify-content-center\">\n            <div className=\"col-12 text-center align-self-center py-5\">\n              <div className=\"section pb-5 pt-5 pt-sm-2 text-center\">\n                <h6 className=\"mb-0 pb-3\"><span className=\"h4\">Log In</span><span className=\"h4\">Sign Up</span></h6>\n                      <input className=\"checkbox\" type=\"checkbox\" id=\"reg-log\" name=\"reg-log\"/>\n                      <label htmlFor=\"reg-log\"></label>\n                <div className=\"card-3d-wrap mx-auto\">\n                  <div className=\"card-3d-wrapper\">\n                    <div className=\"card-front\">\n                      <div className=\"center-wrap\">\n                        <div className=\"section text-center\">\n                          <h3 className=\"mb-4 pb-3\">Log In</h3>\n                          <form  onSubmit={handleLogIn}>\n                                <div className=\"form-group\">\n                                  <input type=\"text\" name=\"logemailin\" value={username} className=\"form-style\" placeholder=\"Your Username\" id=\"usernamein\" onChange={(event) => setUsername(event.target.value)} autoComplete=\"off\" />\n                                  <i className=\"input-icon uil uil-at\"></i>\n                                </div>\t\n                                <div className=\"form-group mt-2\">\n                                  <input type=\"password\" name=\"logpassin\" value={password} className=\"form-style\" placeholder=\"Your Password\" id=\"logpassin\" autoComplete=\"off\" onChange={(event) => setPassword(event.target.value)}/>\n                                  <i className=\"input-icon uil uil-lock-alt\"></i>\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-lg mt-4\" >Submit</button>\n                                <p className=\"mb-0 mt-4 text-center\"><a href=\"#0\" className=\"link\">Forgot your password?</a></p>\n                          </form>\n                            </div>\n                          </div>\n                          \n                        </div>\n                    <div className=\"card-back\">\n                      <div className=\"center-wrap\">\n                        <div className=\"section text-center\">\n                          <h3 className=\"mb-4 pb-3 pt-3\">Sign Up</h3>\n\n                    <form onSubmit={handleSignUp}>\n\n                          <div className=\"d-flex flex-row bd-highlight\">\n                            <div className=\"form-group me-1\">\n                              <input onChange={handleChange} type=\"text\" name=\"logfirstname\" className=\"form-style\" placeholder=\"First Name\" id=\"logfirstname\" autoComplete=\"off\"/>\n                              <i className=\"input-icon uil uil-user\"></i>\n                            </div>\t\n\n                            <div className=\"form-group ms-1\">\n                              <input onChange={handleChange}  type=\"text\" name=\"loglastname\" className=\"form-style\" placeholder=\"Last Name\" id=\"loglastname\" autoComplete=\"off\"/>\n                              <i className=\"input-icon uil uil-user\"></i>\n                            </div>\t\n                          </div>\n\n                          <div className=\"form-group mt-2\">\n                            <input onChange={handleChange}  type=\"text\" name=\"logusername\" className=\"form-style\" placeholder=\"UserName\" id=\"logusername\" autoComplete=\"off\"/>\n                            <i className=\"input-icon uil uil-user\"></i>\n                          </div>\t\n\n                          <div className=\"form-group mt-2\">\n                            <input onChange={handleChange}  type=\"text\" name=\"logemail\" className=\"form-style\" placeholder=\"Your Email\" id=\"logemail\" autoComplete=\"off\"/>\n                            <i className=\"input-icon uil uil-at\"></i>\n                          </div>\t\n\n                          <div className=\"d-flex flex-row bd-highlight mt-2\">\n                            <div className=\"form-group me-1\">\n                              <input onChange={handleChange} type=\"text\" name=\"lognumber\" className=\"form-style\" placeholder=\"Contact Number\" id=\"lognumber\" autoComplete=\"off\"/>\n                              <i className=\"input-icon uil uil-user\"></i>\n                            </div>\t\n\n                            <div className=\"form-group ms-1\">\n                              <input onChange={handleChange} type=\"number\" name=\"logage\" className=\"form-style\" placeholder=\"Age\" id=\"logage\" autoComplete=\"off\"/>\n                              <i className=\"input-icon uil uil-user\"></i>\n                            </div>\t\n                          </div>\n\n                          <div className=\"form-group mt-2\">\n                            <input onChange={handleChange} type=\"password\" name=\"logpass\" className=\"form-style\" placeholder=\"Your Password\" id=\"logpass\" autoComplete=\"off\"/>\n                            <i className=\"input-icon uil uil-lock-alt\"></i>\n                          </div>\n                          <button type=\"submit\" className=\"btn btn-lg mt-4\" >SignUp</button>\n                        </form>\n                          {/* <a href=\"#\" className=\"btn btn-lg mt-4\" onClick={handleSignUp}>SignUp</a> */}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    \n                  </div>\n\n                </div>\n              </div>\n          </div>\n          {/* <Outlet /> */}\n      </div>\n     );\n}\n \nexport default LogIn;","/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/AddPublicPost.js",["85"],[],"import './App.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\nconst AddPublicPost = () => {\n\n    let [vis, setVis] = useState(false);\n    let [title, setTitle] = useState('');\n    let [content, setContent] = useState('');\n    let [tags, setTags] = useState('');\n    let [bann, setbann] = useState('');\n    let [data , setData] = useState([{}]);\n    var num = 1;\n    let[count, setCount] = useState(0);\n    const handleShowForm = () => {\n        setVis(true);\n    };\n\n    useEffect(()=>{\n        if(vis === false){\n            var username = localStorage.getItem(\"username\");\n            let x = {username};\n            axios.post('http://localhost:5000/getPublicPostData',x)\n            .then(response=>{\n                setData(response.data);\n                \n            })\n            .catch(error => {\n                console.error(error);\n            });\n            }\n    },[count])\n\n    const deletePost = (post) =>{\n        console.log(\"delete->\",post);\n        \n        axios.post('http://localhost:5000/deletePost', post)\n            .then(response => {\n                console.log(response.data);\n                setCount(count+1);\n                // window.location.reload(false);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }\n    const navigate = useNavigate();\n\n\n    const openPost=(post)=>{\n        const idx = post._id;\n        navigate(`/post/${idx}`);\n      }\n\n\n    const handleHideForm = () => {\n        let username = localStorage.getItem(\"username\");\n        let x = { username, title, content, bann,tags };\n\n        axios.post('http://localhost:5000/addPublicPost', x)\n            .then(response => {\n                console.log(response);\n            })\n            .catch(error => {\n                 console.error(error);\n            });\n        setVis(false);\n        setTitle(\"\");\n        setContent(\"\");\n        setbann(\"\");\n        setTags(\"\");\n        window.location.reload(false);\n    };\n\n    return (\n\n        <div className=\"AddPublicPost\">\n                {vis ? (<div className=\"form\">\n                    \n                    <section className=\"vh-100\" styles=\"background-color: #eee;\">\n                        \n                        <div className=\"container h-100\">\n                            \n                            <div className=\"row d-flex justify-content-center align-items-center h-100\">\n                                <div className=\"col-lg-12 col-xl-11\">\n                                    <div className=\"card text-black\" styles=\"border-radius: 25px;\">\n                                        <div className=\"card-body p-md-5\">\n                                            <div className=\"row justify-content-center\">\n                                                <div className=\"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1\">\n\n                                                    <p className=\"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4\">Your Post</p>\n\n                                                    <form className=\"mx-1 mx-md-4\">\n\n                                                        <div className=\"d-flex flex-row align-items-center mb-4\">\n                                                            <i className=\"fas fa-user fa-lg me-3 fa-fw\"></i>\n                                                            <div className=\"form-outline flex-fill mb-0\">\n                                                                <label className=\"form-label fw-bold\" >Title</label>\n                                                                <input type=\"text\" className=\"form-control\" value={title} onChange={(input) => setTitle(input.target.value)} />\n\n                                                            </div>\n                                                        </div>\n\n                                                        <div className=\"d-flex flex-row align-items-center mb-4\">\n                                                            <i className=\"fas fa-envelope fa-lg me-3 fa-fw\"></i>\n                                                            <div className=\"form-outline flex-fill mb-0\">\n                                                                <label className=\"form-label fw-bold\">Content</label>\n                                                                <textarea type=\"text\" className=\"form-control\" value={content} onChange={(input) => setContent(input.target.value)} />\n\n                                                            </div>\n                                                        </div>\n\n                                                        <div className=\"d-flex flex-row align-items-center mb-4\">\n                                                            <i className=\"fas fa-key fa-lg me-3 fa-fw\"></i>\n                                                            <div className=\"form-outline flex-fill mb-0\">\n                                                                <label className=\"form-label fw-bold\" htmlFor=\"form3Example4cd\">Banned Words (comma seperated)</label>\n                                                                <input type=\"text\" className=\"form-control\" value={bann} onChange={(input) => setbann(input.target.value)} />\n\n                                                            </div>\n                                                        </div>\n\n                                                        <div className=\"d-flex flex-row align-items-center mb-4\">\n                                                            <i className=\"fas fa-key fa-lg me-3 fa-fw\"></i>\n                                                            <div className=\"form-outline flex-fill mb-0\">\n                                                                <label className=\"form-label fw-bold\" htmlFor=\"form3Example4cd\">Tags (comma seperated)</label>\n                                                                <input type=\"text\" className=\"form-control\" value={tags} onChange={(input) => setTags(input.target.value)} />\n\n                                                            </div>\n                                                        </div>\n\n\n                                                        <div className=\"d-flex justify-content-center mx-4 mb-3 mb-lg-4\">\n                                                            <button type=\"button\" className=\"btn btn-secoundary btn-lg\" onClick={handleHideForm}>Post</button>\n                                                            {/* <button type=\"button\" className=\"btn btn-primary\">Primary</button> */}\n                                                            {/* <button className=\"btn btn-md\" onClick={handleHideForm}>Done</button> */}\n                                                        </div>\n\n                                                    </form>\n\n                                                </div>\n                                                <div className=\"col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2\">\n\n                                                    <img src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/draw1.webp\"\n                                                        className=\"img-fluid\" alt=\"Your animatiomn\" />\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                    \n                </div>):(\n                    <div className=\"posts\">\n                        <div className='text-center'>\n                            <button className=\"btn mt-5 pt-4 pb-4\" onClick={handleShowForm}><h1>Add Post</h1></button>\n                        </div>\n                        <div class=\"list-group pt-5\">\n                        <li  class=\"list-group-item list-group-item-action active h1 \" >Your Public Posts:</li>\n                        \n                        <li  class=\"list-group-item list-group-item-action list-group-item-warning h5\">\n                        <div class=\"container \">\n                                        <div class=\"row text-center\">\n                                            \n                                            <div class=\"col\">\n                                            SR.no.\n                                            </div>\n\n                                            <div class=\"col\">\n                                            Title\n                                            </div>\n                                            <div class=\"col\">\n                                            Followers\n                                            </div>\n                                            <div class=\"col\">\n                                            Banned Keywords\n                                            </div>\n                                            <div class=\"col\">\n                                            Tags\n                                            </div>\n                                        </div>\n                                    </div>\n                        </li>\n                            {data.map(post => (\n                                \n                                <li key = {post.id} class=\"list-group-item list-group-item-action list-group-item-warning h5\">\n                                    <div class=\"container \">\n                                        <div class=\"row text-center\">\n                                            \n                                            <div class=\"col\">\n                                            <p>{num++}.<button className=\"btn ms-3\" onClick={() =>openPost(post)}>Open</button></p>\n                                          \n                                            <button className=\"btn -2 ms-3\" onClick={() =>deletePost(post)} >Delete</button>\n                                            </div>\n\n                                            <div class=\"col\">\n                                            {post.title}\n                                            </div>\n                                            <div class=\"col\">\n                                            {post.followers?.length}\n                                            </div>\n                                            <div class=\"col\">\n                                            {post.banned_keywords}\n                                            </div>\n                                            <div className=\"col\">\n                                                {post.tags}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    \n                                </li>\n                                \n                            ))}\n                        </div>\n                    </div>\n                    \n                )}\n        </div>\n    );\n}\n\nexport default AddPublicPost;","/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/Post_moderator.js",["86"],[],"import { useParams } from \"react-router-dom\";\nimport './App.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\nconst Post = (props) => {\n  const { id }=useParams();\n  let [data , setData] = useState([{}]);\n  let [got, setGot] = useState(false);\n  let [count , setCount] = useState(0);\n  let [cdata , setCdata] = useState([{}]);\n  var num = 1;\n  // let [temp , setTemp] = useState([{}])\n  useEffect(()=>{\n        let x = {id};\n        axios.post('http://localhost:5000/getPostData',x)\n        .then(response=>{\n            setData(response.data);\n            setGot(true);\n        })\n        .catch(error => {\n            console.error(error);\n        });\n\n        axios.post('http://localhost:5000/getCommentsData', x)\n            .then(response => {\n                setCdata(response.data);\n                // console.log(response.data);\n                // setData(response.data);\n                // setGot(true);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n\n  },[count])\n\n\n  const addReplay=(comment)=>{\n    let replay = prompt('Type here');\n    var username = localStorage.getItem(\"username\");\n    var id = comment._id;\n    let x = { username ,id, replay};\n    \n    axios.post('http://localhost:5000/addRelplay', x)\n        .then(response => {\n            console.log(response.data);\n            setCount(count+1);\n        })\n        .catch(error => {\n            console.error(error);\n        });\n}\n\nconst upvote_check = (comment) => {\n    var b = false;\n    var username = localStorage.getItem(\"username\");\n    if (comment && comment.upvotes) {\n      b = comment.upvotes.some(request => request.username === username);\n    }\n    // console.log(\"button_req->\", b);\n    return b;\n  };\n\n  const downvote_check = (comment) => {\n    var b = false;\n    var username = localStorage.getItem(\"username\");\n    if (comment && comment.downvote) {\n      b = comment.downvote.some(request => request.username === username);\n    }\n    // console.log(\"button_req->\", b);\n    return b;\n  };\n\n\nconst upvote=(comment)=>{\n    if(upvote_check(comment)){\n        alert(\"You can't upvote more than once\");\n        return;\n    }\n    let id = comment._id;\n    var username = localStorage.getItem(\"username\");\n\n    let x = {username , id};\n    axios.post('http://localhost:5000/upvote', x)\n        .then(response => {\n            console.log(response.data);\n            setCount(count+1);\n        })\n        .catch(error => {\n            console.error(error);\n        });\n\n}\n\nconst downvote=(comment)=>{\n\n    if(downvote_check(comment)){\n        alert(\"You can't downvote more than once\");\n        return;\n    }\n    let id = comment._id;\n    var username = localStorage.getItem(\"username\");\n\n    let x = {username , id};\n    axios.post('http://localhost:5000/downvote', x)\n        .then(response => {\n            console.log(response.data);\n            setCount(count+1);\n        })\n        .catch(error => {\n            console.error(error);\n        });\n\n}\n\n  // useEffect(()=>{\n  //   setTemp(data);\n  // },[data])\n\n  const Accept_req=(req)=>{\n    //accept_Req\n    var username = req.username;\n    let x={id , username};\n    \n    axios.post('http://localhost:5000/Accept_req',x)\n        .then(response=>{\n            console.log(response.data);\n            setCount(count+1);\n        })\n        .catch(error => {\n            console.error(error);\n        });\n        // window.location.reload(false);\n        // \n  }\n\n  const Deny_req=(req)=>{\n    //accept_Req\n    var username = req.username;\n    let x={id , username};\n    \n    axios.post('http://localhost:5000/Deny_req',x)\n        .then(response=>{\n            console.log(response.data);\n            setCount(count+1);\n        })\n        .catch(error => {\n            console.error(error);\n        });\n        // window.location.reload(false);\n  }\n  let [disreq , setDisreq] = useState(false);\n  \n  const displayReq=()=>{\n    setDisreq(true);\n  }\n  const closeReq=()=>{\n    setDisreq(false);\n  }\n\n  let [disF, setDisF] = useState(false);\n\n  const displayF=()=>{\n    setDisF(true);\n  }\n  const closeF=()=>{\n    setDisF(false);\n  }\n\n  let [disB, setDisB] = useState(false);\n\n  const displayB=()=>{\n    setDisB(true);\n  }\n  const closeB=()=>{\n    setDisB(false);\n  }\n\n  let nav = useNavigate(); \n  const seeReports=(comment)=>{\n    const idx = comment._id;\n    nav(`/post/${id}/${idx}`);\n  }\n\n  return ( \n    <div  className=\"text-center p-5\">\n      {console.log(id)}\n      \n      <h2>{data.title}</h2>\n      {!disreq && <button className=\"btn mt-3\" onClick={displayReq}>Requests</button> }\n      {disreq && <button className=\"btn mt-3\" onClick={closeReq}>Close</button>}\n      {disreq && <  div class=\"rounded p-4 post_data_for_user\" >\n          {/* <h3 className=\"text-left\">Content</h3> */}\n          <p class=\"h3\">Requests:</p>\n\n          <div class=\"mt-4\">\n            {/* <p>{data.requests.length}</p> */}\n          { got && data.requests.map((req,index) => (\n            <div key={index}>\n        \n            <div className=\"row p-3\">\n              <div className=\"col col-4 h4\">{req.username}</div>\n              <div className=\"col col-4\"> <button className=\"btn ms-5\" onClick={() =>Accept_req(req)}>Accept</button></div>\n              <div className=\"col col-4\"> <button className=\"btn ms-5\" onClick={() =>Deny_req(req)}>Deny</button></div>\n            </div>\n            \n            </div>\n          ))}\n                            \n          </div>\n\n      </div>}\n\n    \n      {!disF && <button className=\"btn mt-3 ms-3\" onClick={displayF}>Followers</button> }\n      {disF && <button className=\"btn mt-3 ms-3\" onClick={closeF}>Close</button>}\n      {disF && <  div class=\"rounded p-4 post_data_for_user\" >\n          {/* <h3 className=\"text-left\">Content</h3> */}\n          <p class=\"h3\">Followers:</p>\n\n          <div class=\"mt-4\">\n            {/* <p>{data.requests.length}</p> */}\n          { got && data.followers.map((req,index) => (\n            <div key={index}>\n        \n            <div className=\"row p-3\">\n              <div className=\"col col-4 h4\">{req.username}</div>\n              {/* <div className=\"col col-4\"> <button className=\"btn ms-5\" onClick={() =>Accept_req(req)}>Accept</button></div>\n              <div className=\"col col-4\"> <button className=\"btn ms-5\" onClick={() =>Deny_req(req)}>Deny</button></div> */}\n            </div>\n            \n            </div>\n          ))}\n                            \n          </div>\n\n      </div>}\n      \n\n      {!disB && <button className=\"btn mt-3 ms-3\" onClick={displayB}>Blocked users</button> }\n      {disB && <button className=\"btn mt-3 ms-3\" onClick={closeB}>Close</button>}\n      {disB && <  div class=\"rounded p-4 post_data_for_user\" >\n          {/* <h3 className=\"text-left\">Content</h3> */}\n          <p class=\"h3\">Blocked users:</p>\n\n          <div class=\"mt-4\">\n            {/* <p>{data.requests.length}</p> */}\n          { got && data.banned_people.map((req,index) => (\n            <div key={index}>\n        \n            <div className=\"row p-3\">\n              <div className=\"col col-4 h4\">{req.username}</div>\n              {/* <div className=\"col col-4\"> <button className=\"btn ms-5\" onClick={() =>Accept_req(req)}>Accept</button></div>\n              <div className=\"col col-4\"> <button className=\"btn ms-5\" onClick={() =>Deny_req(req)}>Deny</button></div> */}\n            </div>\n            \n            </div>\n          ))}\n                            \n          </div>\n\n      </div>}\n\n\n      <h3 className=\"mt-3 mb-4\">Comments</h3>\n\n                    <li  class=\"list-group-item list-group-item-action list-group-item-warning h5\">\n                        <div class=\"container \">\n                                        <div class=\"row text-center\">\n                                            \n                                            <div class=\"col-sm\">\n                                            Username\n                                            </div>\n\n                                            <div class=\"col-sm \">\n                                            Title\n                                            </div>\n                                           \n                                            <div class=\"col-sm\">\n                                            UV / DV\n                                            </div>\n                                            <div class=\"col\">\n                                            Replies\n                                            </div>\n                                            <div className=\"col\">\n                                                Replay\n                                            </div>\n                                           \n                                        </div>\n                                    </div>\n                        </li>\n                    {cdata.map((comment, index) => (\n                                \n                                <div>\n                               {/* <p>{JSON.stringify(post)}</p>  */}\n                                <li  key={index} class=\"list-group-item list-group-item-action list-group-item-warning h5\">\n                                    <div class=\"container \">\n                                        <div class=\"row text-center\">\n                                            \n                                            <div class=\"col-sm\">\n                                            <p>{num++}</p>  {comment.username}\n                                            {/* <button className=\"btn -2\" onClick={() =>deletePost(post)} >Delete</button> */}\n                                            </div>\n\n                                            <div class=\"col-sm\">\n                                            {comment.title}\n                                            </div>\n                                    \n                                            <div class=\"col-sm\">\n                                            {\n                                              <p><button className=\"btn me-2\" onClick={()=>{upvote(comment)}}>{comment.upvotes?.length}</button>\n                                              <button className=\"btn\" onClick={()=>{downvote(comment)}} >{comment.downvote?.length}</button>\n                                              </p>\n                                            }       \n                                            </div>\n\n                                            <div className=\"col\">\n\n                                            <div class=\"dropdown\">\n                                                    <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                                                        Replies\n                                                    </button>\n                                                    <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n                                                    \n                                                        {comment.replies?.map((rep, index)=>(\n                                                            <li className=\"dropdown-item\" >{rep.text}</li>\n                                                        ))}\n                                                    </ul>\n\n                                                    <button className=\"btn mt-1\" onClick={()=>{seeReports(comment)}}>Report's</button>\n                                                    </div>\n                                                    \n                                                    \n                                            </div>\n                                            <div className=\"col\">\n                                            {/* onChange={(input) => setContent(input.target.value)} */}\n                                                <p><button className=\"btn\" onClick={()=>{addReplay(comment)}}>Add Replay</button>\n                                                <button className=\"btn mt-1 ps-4 pe-4\" onClick={()=>{alert(JSON.stringify(comment.Content))}}>See Content</button></p>\n                                                {/* <button className=\"btn\" onClick={()=>{addReplay(comment)}}>Add Replay</button> */}\n                                            </div>\n                                              \n                                        </div>\n                                    </div>\n                                    \n                                </li>\n                                </div>\n                            ))}\n\n\n\n    </div>\n  );\n}\nexport default Post;\n","/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/Profile.js",["87","88","89"],[],"import { useNavigate } from \"react-router-dom\";\nimport { useEffect } from 'react';\nimport Followers_followings from './Followers_followings'\nimport axios from 'axios';\nimport React, { useState } from 'react';\n\nconst Profile = () => {\n    \n    const navigate = useNavigate();\n    const navigate2 = useNavigate();\n    let [fn,sfn] = useState('');\n    let [ln,sln] = useState('');\n    let [un,sun] = useState('');\n    let [number,snumber] = useState('');\n    let [age,sage] = useState('');\n    let [mail,smail] = useState('');\n    let [org,sorg] = useState('');\n    let [loc,sloc] = useState('');\n    let [isDataLoaded, setIsDataLoaded] = useState(false);\n\n    const [getUserData,setUserData] = useState('');\n    // var getUserData=\"\";\n    useEffect(() => {\n        let username = localStorage.getItem(\"username\");\n        let x = {username};\n        if(localStorage.getItem(\"isLogedIn\") === \"true\"){\n            \n            axios.post('http://localhost:5000/yourdata', x)\n                .then(response => {\n                    \n                var getUserData = JSON.parse(JSON.stringify(response.data));\n                // setUserData(response.data);\n                setUserData(getUserData);\n                // console.log(getUserData);\n                setIsDataLoaded(true);\n\n                })\n                .catch(error => {\n                console.error(error);\n                });\n        }\n        else{\n            navigate2(\"/\");\n        }\n    },[])\n\n    \n    useEffect(()=>{\n        if(isDataLoaded === true){\n            console.log(\"hi I m here\\n\"+ getUserData.firstname);\n            sfn(getUserData.firstname);\n            sln(getUserData.lastname);\n            sun(getUserData.username);\n            smail(getUserData.email);\n            sage(getUserData.age);\n            snumber(getUserData.contactnumber);\n            sorg(getUserData.organistaion);\n            sloc(getUserData.location);\n            console.log(getUserData.firstname);\n        }\n    },[isDataLoaded])\n\n    const handleLogOut = (event) => {\n        event.preventDefault();\n        localStorage.setItem(\"username\", null);\n        localStorage.setItem(\"isLogedIn\", \"false\");\n        navigate(\"/\");\n      };\n    \n    const navigate3 = useNavigate();\n\n    const gotoPublicPost=()=>{\n        navigate3(\"/publicPost\");\n    }\n    const navigate4 = useNavigate();\n\n    const gotoAllPublicPost=()=>{\n        navigate4(\"/AllPosts\");\n    }\n\n    const changeUserData=(event)=>{\n        //send new updated data to 5000/change-data and then to mongoDB\n        //this is working.\n        var username = localStorage.getItem(\"username\");\n        let x = {un,fn,ln,mail,number,age,org,loc,username};\n        console.log(x);\n        \n        axios.post('http://localhost:5000/change-data', x)\n        .then(response => {\n            localStorage.setItem(\"username\",un);\n            window.location.reload(false);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n    \n\n    return ( \n        <div className=\"Profile\">\n            \n                <div className=\"container-xl px-4 pt-5 pb-5\">\n        {/* <!-- Account page navigation--> */}\n        \n        <hr className=\"mt-0 mb-4\"/>\n        <div className=\"row\">\n            <div className=\"col-xl-4\">\n                {/* <!-- Profile picture card--> */}\n                <div className=\"card mb-4 mb-xl-0\">\n                    <div className=\"card-header\">Profile Picture</div>\n                    <div className=\"card-body text-center\">\n                        {/* <!-- Profile picture image--> */}\n                        <img className=\"img-account-profile rounded-circle mb-2\" src=\"http://bootdey.com/img/Content/avatar/avatar1.png\" alt=\"\"/>\n                        {/* <!-- Profile picture help block--> */}\n                        <div className=\"small font-italic text-muted mb-4\">JPG or PNG no larger than 5 MB</div>\n                        {/* <!-- Profile picture upload button--> */}\n                        <button className=\"btn btn-primary\" type=\"button\">Upload new image</button>\n                    </div>\n                </div>\n                <div>\n                    <div className=\" mt-2 card mb-4 mb-xl-0\">\n                    {<Followers_followings/>}\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"col-xl-8\">\n                {/* <!-- Account details card--> */}\n                <div className=\"card mb-4\">\n                    <div className=\"card-header\">Account Details</div>\n                    <div className=\"card-body\">\n                        <form>\n                            {/* <!-- Form Group (username)--> */}\n                            <div className=\"mb-3\">\n                                <label className=\"small mb-1\" htmlFor=\"inputUsername\">Username (how your name will appear to other users on the site)</label>\n                                <input className=\"form-control\" id=\"inputUsername\" type=\"text\" placeholder=\"Enter your username\" value={un} onChange={(input)=>sun(input.target.value)}/>\n                            </div>\n                            {/* <!-- Form Row--> */}\n                            <div className=\"row gx-3 mb-3\">\n                                {/* <!-- Form Group (first name)--> */}\n                                <div className=\"col-md-6\">\n                                    <label className=\"small mb-1\" htmlFor=\"inputFirstName\">First name</label>\n                                    <input className=\"form-control\" id=\"inputFirstName\" type=\"text\" placeholder=\"Enter your first name\" value={fn} onChange={(input)=>sfn(input.target.value)}/>\n                                </div>\n                                {/* <!-- Form Group (last name)--> */}\n                                <div className=\"col-md-6\">\n                                    <label className=\"small mb-1\" htmlFor=\"inputLastName\">Last name</label>\n                                    <input className=\"form-control\" id=\"inputLastName\" type=\"text\" placeholder=\"Enter your last name\" value={ln} onChange={(input)=>sln(input.target.value)}/>\n                                </div>\n                            </div>\n                            {/* <!-- Form Row        -> */}\n                            <div className=\"row gx-3 mb-3\">\n                                {/* <!-- Form Group (organization name)--> */}\n                                <div className=\"col-md-6\">\n                                    <label className=\"small mb-1\" htmlFor=\"inputOrgName\">Organization name</label>\n                                    <input className=\"form-control\" id=\"inputOrgName\" type=\"text\" placeholder=\"Enter your organization name\" value={org} onChange={(input)=>sorg(input.target.value)}/>\n                                </div>\n                                {/* <!-- Form Group (location)--> */}\n                                <div className=\"col-md-6\">\n                                    <label className=\"small mb-1\" htmlFor=\"inputLocation\">Location</label>\n                                    <input className=\"form-control\" id=\"inputLocation\" type=\"text\" placeholder=\"Enter your location\" value={loc} onChange={(input)=>sloc(input.target.value)}/>\n                                </div>\n                            </div>\n                            {/* <!-- Form Group (email address)--> */}\n                            <div className=\"mb-3\">\n                                <label className=\"small mb-1\" htmlFor=\"inputEmailAddress\">Email address</label>\n                                <input className=\"form-control\" id=\"inputEmailAddress\" type=\"email\" placeholder=\"Enter your email address\" value={mail} onChange={(input)=>smail(input.target.value)}/>\n                            </div>\n                            {/* <!-- Form Row--> */}\n                            <div className=\"row gx-3 mb-3\">\n                                {/* <!-- Form Group (phone number)--> */}\n                                <div className=\"col-md-6\">\n                                    <label className=\"small mb-1\" htmlFor=\"inputPhone\">Phone number</label>\n                                    <input className=\"form-control\" id=\"inputPhone\" type=\"tel\" placeholder=\"Enter your phone number\" value={number} onChange={(input)=>snumber(input.target.value)}/>\n                                </div>\n                                {/* <!-- Form Group (birthday)--> */}\n                                <div className=\"col-md-6\">\n                                    <label className=\"small mb-1\" htmlFor=\"inpuptAge\">Age</label>\n                                    <input className=\"form-control\" id=\"inputAge\" type=\"text\" name=\"age\" placeholder=\"Enter your age\" value={age} onChange={(e)=>{\n                                        sage(e.target.value);\n                                    }}/>\n                                </div>\n                            </div>\n                            {/* <!-- Save changes button--> */}\n                            <button className=\"btn btn-primary\" type=\"button\" onClick={changeUserData}>Edit</button>                            \n                            <button className=\"btn btn-primary ms-3\" onClick={handleLogOut}>LogOut</button>\n                        \n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </div>\n        <div className='text-center'>\n            <button className=\"btn mt-1 mb-2 pt-4 pb-4\" onClick={gotoPublicPost}><h3>Your Public Post's</h3></button>\n            <br />\n            <button className=\"btn mt-1 mb-5 pt-4 pb-4\" onClick={gotoAllPublicPost}><h3>All Public Post's</h3></button>\n        </div>\n        \n            {/* <FollowersList />\n            <FollowingList/> */}\n            {/* <button className=\"btn btn-primary ms-3\" onClick={addFollowersFollowings}>ADDFollowersandings</button> */}\n        </div>\n     );\n}\n \nexport default Profile;","/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/Post_review.js",["90","91","92"],[],"import { useParams } from \"react-router-dom\";\nimport './App.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useEffect } from 'react';\n\n\nconst Post_review = () => {\n\n  const { id }=useParams();\n  let [data , setData] = useState([{}]);\n  let [got, setGot] = useState(false);\n  let [count , setCount] = useState(0);\n\n  useEffect(()=>{\n        let x = {id};\n        axios.post('http://localhost:5000/getPostData',x)\n        .then(response=>{\n            setData(response.data);\n            setGot(true);\n        })\n        .catch(error => {\n            console.error(error);\n        });\n    },[count])\n    \n\n    // const reportPost=()=>{\n        \n    // }\n    return ( \n        <div className=\"pt-5 pb-5 Post_review text-center\">\n            <h1>{data.title}</h1>\n\n            <div className=\"p-5 rounded reviewdata\"  ><h3>{data.Content}</h3> <br />\n            <h5>No. Of Followers: {\"  \"+data.followers?.length} </h5> <br />\n            <h5>Tags: {data.tags}</h5><br />\n            <h5>Banned words: {data.banned_keywords}</h5></div>\n            \n\n            {/* <button className=\"btn mt-1 pt-4 pb-4\" onClick={reportPost}><h1>Report Post</h1></button> */}\n        </div>\n     );\n}\n \nexport default Post_review;","/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/AllPosts.js",["93","94","95","96","97"],[],"import './App.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst AllPosts = () => {\n\n    let [data , setData] = useState([{}]);\n    let [search , setSearch] = useState(\"\");\n    const [objects, setObjects] = useState([{}]); \n    const [count,setCount]=useState(0);\n    // let [got , setGot] = useState(false); \n    const localUsername = localStorage.getItem(\"username\");\n    \n    var num = 1;\n    useEffect(()=>{\n            console.log(\"ran again\")\n            axios.post('http://localhost:5000/getAllPostData','')\n            .then(response=>{\n                setData(response.data);\n                setObjects(response.data);\n                // console.log(response.data);\n                \n            })\n            .catch(error => {\n                console.error(error);\n            });            \n    },[count])\n    \n    // useEffect(()=>{\n    //   console.log(\"fififif\");\n    //   // setObjects(data);\n\n    //   setObjects([...data]);\n    // },[data]);\n    const sort_func = (idx) => {\n        //sort data\n        let field;\n        if (idx === 1) {\n          field = 'username';\n        } else if (idx === 2) {\n          field = 'username';\n        } else if (idx === 3) {\n          field = 'title';\n        } else if (idx === 4) {\n          field = 'title';\n        }\n      \n        setObjects(\n            [...data].sort((a, b)  => {\n            if (idx === 1 || idx === 2) {\n              if (a[field] < b[field]) {\n                return idx === 1 ? -1 : 1;\n              }\n              if (a[field] > b[field]) {\n                return idx === 1 ? 1 : -1;\n              }\n              return 0;\n            } else if (idx === 3 || idx === 4) {\n              if (a[field] < b[field]) {\n                return idx === 3 ? 1 : -1;\n              }\n              if (a[field] > b[field]) {\n                return idx === 3 ? -1 : 1;\n              }\n              return 0;\n            }\n          })\n        );\n        // setObjects(objects);\n        // console.log(\"hi->\",objects);\n\n    };\n    const handleSearch = ()=>{\n        const result = data.reduce((acc, curr) => {\n            if (curr.username.includes(search)) {\n              acc.push(curr);\n            }\n            return acc;\n          }, []);\n          \n          // console.log(result);\n          setObjects(result);\n\n    };\n\n    const followRequest=(post)=>{\n      // e.preventDefault();\n      var username = localStorage.getItem(\"username\");\n      var content = post.Content;\n      var x = { content , username};\n      axios.post('http://localhost:5000/followRequest',x)\n      .then(response=>{\n        setCount(count+1);\n    })\n        .catch(error => {\n        console.error(error);\n    });\n    // window.location.reload(false);\n    \n    }\n\n    const leavepost=(post)=>{\n      console.log(\"leave post\");\n      var username = localStorage.getItem(\"username\");\n      var idx = post._id;\n      var x = { idx , username};\n      axios.post('http://localhost:5000/leavepost',x)\n      .then(response=>{\n        console.log(response.data);\n        // window.location.reload(false);\n        setCount(count+1);\n\n    })\n        .catch(error => {\n        console.error(error);\n    });\n    }\n\n    const button_requests = (post) => {\n      var b = false;\n      if (post && post.requests) {\n        b = post.requests.some(request => request.username === localUsername);\n      }\n      // console.log(\"button_req->\", b);\n      return b;\n    };\n\n    const button_leave = (post) => {\n      var b = false;\n      if (post && post.requests) {\n        b = post.followers.some(foll => foll.username === localUsername);\n      }\n      // console.log(\"button_req->\", b);\n      return b;\n    };\n\n    const button_block = (post) => {\n      var b = false;\n      if (post && post.banned_people) {\n        b = post.banned_people.some(foll => foll.username === localUsername);\n      }\n      // console.log(\"button_req->\", b);\n      return b;\n    };\n    let navigate  = useNavigate();\n    const open_post=(post)=>{\n      const idx = post._id;\n      if(button_leave(post) ) //followers\n        navigate(`/follower_post/${idx}`);\n      else\n      navigate(`/review_post/${idx}`);\n        \n    }\n\n    // const button_leave= (post) => {\n    //   // Your logic here\n    //   // return true;\n    //   console.log(post);\n    //   var b = post.blocked.some(request => request.username === localUsername);\n    //   console.log(\"button_req->\",b);\n    //   if(b)return true;\n    //   return false;\n    // };\n    // const followers=(post)=>{\n    //   return post.followers.length;\n    // }\n\n    return ( \n        <div className=\"AllPosts\">\n             <div className=\"posts\">\n                        <div class=\"list-group pt-5\">\n                        <li  class=\"list-group-item list-group-item-action active h1 \" >All Public Posts:</li>\n                        \n                        <div>\n                           <div class=\"dropdown\">\n                                <button class=\"btn btn-secondary m-3 dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton2\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                                    Sort\n                                </button>\n                                <ul class=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"dropdownMenuButton2\">\n                                    <li><a class=\"dropdown-item\" onClick={() =>sort_func(1)}>Username(A to Z)</a></li>\n                                    <li><a class=\"dropdown-item\" onClick={() =>sort_func(2)}>Username(Z to A)</a></li>\n                                    <li><a class=\"dropdown-item\" onClick={() =>sort_func(3)}>Title(A to Z)</a></li>\n                                    <li><a class=\"dropdown-item\" onClick={() =>sort_func(4)}>Title(Z to A)</a></li>\n                                </ul>\n\n                                <input type=\"text\" placeholder='Search Word' class=\"ms-4\" value={search} onChange={(input) => setSearch(input.target.value)}/> \n                                <button className=\"btn ms-3 \" type=\"submit\" onClick={handleSearch}>Submit</button>\n                            </div>\n\n                        </div>\n                        <li  class=\"list-group-item list-group-item-action list-group-item-warning h5\">\n                        <div class=\"container \">\n                                        <div class=\"row text-center\">\n                                            \n                                            <div class=\"col-sm\">\n                                            SR.no.\n                                            </div>\n\n                                            <div class=\"col-sm \">\n                                            Title\n                                            </div>\n                                            <div class=\"col-4\">\n                                            Followers\n                                            </div>\n                                            <div class=\"col\">\n                                            Follow\n                                            </div>\n                                            <div class=\"col\">\n                                            Open\n                                            </div>\n                                        </div>\n                                    </div>\n                        </li>\n                            {objects.map((post, index) => (\n                                \n                                <div>\n                               {/* <p>{JSON.stringify(post)}</p>  */}\n                                <li  key={index} class=\"list-group-item list-group-item-action list-group-item-warning h5\">\n                                    <div class=\"container \">\n                                        <div class=\"row text-center\">\n                                            \n                                            <div class=\"col-sm\">\n                                            <p>{num++}</p>  {post.username}\n                                            {/* <button className=\"btn -2\" onClick={() =>deletePost(post)} >Delete</button> */}\n                                            </div>\n\n                                            <div class=\"col-sm\">\n                                            {post.title}\n                                            </div>\n                                            <div class=\"col-4\">\n                                            <div>{post.followers?.length}</div>\n                                            </div>\n                                            <div class=\"col\">\n                                            {\n                                              <div>\n                                              <div>{button_requests(post) && <button className=\"btn disabled\">Requested</button> }</div>\n                                              <div>{button_leave(post) && <button className=\"btn\" onClick={()=>leavepost(post)} >Leave</button> }</div>\n                                              <div >{button_block(post) && <button className=\"btn disabled\">Blocked</button> }</div>\n                                              <div>{!button_requests(post)  && !button_leave(post) && !button_block(post)  && <button className=\"btn\" onClick={()=>followRequest(post)}>Follow</button>}</div>\n                                              </div>\n                                            }\n                                            \n                                            </div>\n                                            <div className=\"col\">\n                                            <div >{button_block(post) && <button className=\"btn disabled\">Open</button> }</div>\n                                            <div>{!button_block(post) && <button className=\"btn\" onClick={()=>open_post(post)}>Open</button>} </div>\n                                            </div>\n                                            \n                                        </div>\n                                    </div>\n                                    \n                                </li>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n        </div>\n     );\n}\n \nexport default AllPosts;","/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/report.js",["98","99","100","101"],[],"import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport { useTransition } from \"react\";\nconst Report = (prop) => {\n    const {id} = useParams();\n    const {idx } = useParams();\n    let [count , setCount] = useState(0);\n    let [data , setData] = useState([{}]);\n\n    useEffect(()=>{\n        let x = {idx};\n        axios.post('http://localhost:5000/getCommentData', x)\n            .then(response => {\n                setData(response.data);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n\n    } , [count])\n\n    const ignore=(rep)=>{\n        //ignore warning.\n        let report_id =  rep._id;\n        let x = {idx , report_id};\n        axios.post('http://localhost:5000/ignore', x)\n            .then(response => {\n                // setData(response.data);\n                setCount(count+1);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n\n    }\n    const block=(rep)=>{\n        //block user.\n        alert(\"Ho jayegaa mujhe nahi karnaa\");\n    }\n\n    let nav2 = useNavigate();\n\n    const delete_post=(rep)=>{\n\n        let x = {idx};\n        axios.post('http://localhost:5000/delete_post', x)\n            .then(response => {\n                // setData(response.data);\n                let to = idx;\n                nav2(-1);\n            //    console.log(\"by bye\");\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        \n    }\n    return ( \n        <div className=\"text-center\">\n            <h1>Report's: </h1>\n            {/* {console.log(\"hihi->\"+idx)} */}\n            <li  class=\"list-group-item list-group-item-action list-group-item-warning h5\">\n                        <div class=\"container \">\n                                        <div class=\"row text-center\">\n                                            \n                                            <div class=\"col\">\n                                            Reported by\n                                            </div>\n\n                                            <div class=\"col \">\n                                            Reason\n                                            </div>\n                                            <div class=\"col\">\n                                            Ignore\n                                            </div>\n                                            <div class=\"col\">\n                                            Block User\n                                            </div>\n                                            <div class=\"col\">\n                                            Delete Post\n                                            </div>\n                                        </div>\n                                    </div>\n                        </li>\n\n\n            {data && data.reportedBy?.map((req , index) =>(\n                <li  class=\"list-group-item list-group-item-action list-group-item-warning h5\">\n                        <div class=\"container \">\n                                        <div class=\"row text-center\">\n                                            <div className=\"col\">\n                                                {req.username}\n                                            </div>\n                                            <div className=\"col\">\n                                                {req.reason}\n                                            </div>\n                                            <div className=\"col\">\n                                                <button className=\"btn\" onClick={()=>ignore(req)}>Ignore</button>\n                                            </div>\n                                            <div className=\"col\">\n                                                <button className=\"btn\" onClick={()=>block(req)}>Block User</button>\n                                            </div>\n                                            <div className=\"col\"><button className=\"btn\" onClick={()=>delete_post(req)}>Delete Post</button></div>\n                                        </div>\n                        </div>\n                </li>\n            ))}\n        </div>\n     );\n}\n \nexport default Report;","/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/Post_follower.js",["102"],[],"import { useParams } from \"react-router-dom\";\nimport './App.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useEffect } from 'react';\n\nconst Post_follower = () => {\n\n    const { id } = useParams();\n\n    let [data, setData] = useState([{}]);\n    let [vis, setVis] = useState(false);\n    let [title, setTitle] = useState('');\n    let [content, setContent] = useState('');\n    let [count, setCount] = useState(0);\n    let [cdata , setCdata] = useState([{}]);\n    var num = 1;\n    useEffect(() => {\n        let x = { id };\n        axios.post('http://localhost:5000/getPostData', x)\n            .then(response => {\n                setData(response.data);\n                // console.log(response.data);\n                // setGot(true);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        \n            axios.post('http://localhost:5000/getCommentsData', x)\n            .then(response => {\n                setCdata(response.data);\n                // console.log(response.data);\n                // setData(response.data);\n                // setGot(true);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n\n    }, [count])\n\n    const addComment = () => {\n        setVis(true);\n    }\n    const handleHideForm=()=>{\n        var username = localStorage.getItem(\"username\");\n        let x = {content , title , id, username};\n        \n        axios.post('http://localhost:5000/postComment', x)\n            .then(response => {\n                console.log(response.data);\n                setCount(count+1);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n            setContent(\"\");\n            setTitle(\"\");\n        setVis(false);\n        \n    }\n\n    const addReplay=(comment)=>{\n        let replay = prompt('Type here');\n        var username = localStorage.getItem(\"username\");\n        var id = comment._id;\n        let x = { username ,id, replay};\n        \n        axios.post('http://localhost:5000/addRelplay', x)\n            .then(response => {\n                console.log(response.data);\n                setCount(count+1);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }\n\n    const upvote_check = (comment) => {\n        var b = false;\n        var username = localStorage.getItem(\"username\");\n        if (comment && comment.upvotes) {\n          b = comment.upvotes.some(request => request.username === username);\n        }\n        // console.log(\"button_req->\", b);\n        return b;\n      };\n\n      const downvote_check = (comment) => {\n        var b = false;\n        var username = localStorage.getItem(\"username\");\n        if (comment && comment.downvote) {\n          b = comment.downvote.some(request => request.username === username);\n        }\n        // console.log(\"button_req->\", b);\n        return b;\n      };\n\n\n    const upvote=(comment)=>{\n        if(upvote_check(comment)){\n            alert(\"You can't upvote more than once\");\n            return;\n        }\n        let id = comment._id;\n        var username = localStorage.getItem(\"username\");\n\n        let x = {username , id};\n        axios.post('http://localhost:5000/upvote', x)\n            .then(response => {\n                console.log(response.data);\n                setCount(count+1);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n\n    }\n\n    const reportPost=(comment)=>{\n        let issue = prompt('Can you describe your issue:');\n        let username = localStorage.getItem(\"username\");\n        let idx = comment._id;\n        let x = {username , issue , idx };\n\n        axios.post('http://localhost:5000/reportPost', x)\n            .then(response => {\n                console.log(response.data);\n                setCount(count+1);\n            })\n            .catch(error => {\n                console.error(error);\n            });        \n    }\n    const downvote=(comment)=>{\n\n        if(downvote_check(comment)){\n            alert(\"You can't downvote more than once\");\n            return;\n        }\n        let id = comment._id;\n        var username = localStorage.getItem(\"username\");\n\n        let x = {username , id};\n        axios.post('http://localhost:5000/downvote', x)\n            .then(response => {\n                console.log(response.data);\n                setCount(count+1);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n\n    }\n\n\n    const button_reported = (comment) => {\n\n        var username = localStorage.getItem(\"username\");\n        var b = false;\n        if (comment && comment.reportedBy) {\n            // console.log(\"here\");\n          b = comment.reportedBy.some(foll => foll.username === username);\n        }\n\n        return b;\n      };\n\n\n\n    return (\n        <div>\n            {vis ? (\n                <div className=\"form\">\n\n                    <section className=\"vh-100\" styles=\"background-color: #eee;\">\n\n                        <div className=\"container h-100\">\n\n                            <div className=\"row d-flex justify-content-center align-items-center h-100\">\n                                <div className=\"col-lg-12 col-xl-11\">\n                                    <div className=\"card text-black\" styles=\"border-radius: 25px;\">\n                                        <div className=\"card-body p-md-5\">\n                                            <div className=\"row justify-content-center\">\n                                                <div className=\"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1\">\n\n                                                    <p className=\"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4\">Your Post</p>\n\n                                                    <form className=\"mx-1 mx-md-4\">\n\n                                                        <div className=\"d-flex flex-row align-items-center mb-4\">\n                                                            <i className=\"fas fa-user fa-lg me-3 fa-fw\"></i>\n                                                            <div className=\"form-outline flex-fill mb-0\">\n                                                                <label className=\"form-label fw-bold\" >Title</label>\n                                                                <input type=\"text\" className=\"form-control\" value={title} onChange={(input) => setTitle(input.target.value)} />\n\n                                                            </div>\n                                                        </div>\n\n                                                        <div className=\"d-flex flex-row align-items-center mb-4\">\n                                                            <i className=\"fas fa-envelope fa-lg me-3 fa-fw\"></i>\n                                                            <div className=\"form-outline flex-fill mb-0\">\n                                                                <label className=\"form-label fw-bold\">Content</label>\n                                                                <textarea type=\"text\" className=\"form-control\" value={content} onChange={(input) => setContent(input.target.value)} />\n\n                                                            </div>\n                                                        </div>\n\n                                                        <div className=\"d-flex justify-content-center mx-4 mb-3 mb-lg-4\">\n                                                            <button type=\"button\" className=\"btn btn-secoundary btn-lg\" onClick={handleHideForm}>Post</button>\n                                                            {/* <button type=\"button\" className=\"btn btn-primary\">Primary</button> */}\n                                                            {/* <button className=\"btn btn-md\" onClick={handleHideForm}>Done</button> */}\n                                                        </div>\n\n                                                    </form>\n\n                                                </div>\n                                                <div className=\"col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2\">\n\n                                                    <img src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/draw1.webp\"\n                                                        className=\"img-fluid\" alt=\"Your animatiomn\" />\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n\n                </div>\n            ) : (\n                <div>\n                <div className=\"pt-5 pb-5 Post_review text-center\">\n                    <h1>{data.title}</h1>\n\n                    <div className=\"p-5 rounded reviewdata\"  ><h3>{data.Content}</h3> <br />\n                        <h5>No. Of Followers: {\"  \" + data.followers?.length} </h5> <br />\n                        <h5>Tags: {data.tags}</h5><br />\n                        <h5>Banned words: {data.banned_keywords}</h5></div>\n                    <button className=\"btn mb-3 pt-4 pb-4\" onClick={addComment}><h1>Add Comment</h1></button>\n                    {/* <p>{JSON.stringify(cdata)}</p> */}\n                    <h3 className=\"mt-3 mb-4\">Comments</h3>\n\n                    <li  class=\"list-group-item list-group-item-action list-group-item-warning h5\">\n                        <div class=\"container \">\n                                        <div class=\"row text-center\">\n                                            \n                                            <div class=\"col-sm\">\n                                            Username\n                                            </div>\n\n                                            <div class=\"col-sm \">\n                                            Title\n                                            </div>\n                                           \n                                            <div class=\"col-sm\">\n                                            UV / DV\n                                            </div>\n                                            <div class=\"col\">\n                                            Replies\n                                            </div>\n                                            <div className=\"col\">\n                                                Replay\n                                            </div>\n                                        </div>\n                                    </div>\n                        </li>\n                    {cdata.map((comment, index) => (\n                                \n                                <div>\n                               {/* <p>{JSON.stringify(post)}</p>  */}\n                                <li  key={index} class=\"list-group-item list-group-item-action list-group-item-warning h5\">\n                                    <div class=\"container \">\n                                        <div class=\"row text-center\">\n                                            \n                                            <div class=\"col-sm\">\n                                            <p>{num++}</p>  {comment.username}\n                                            {/* <button className=\"btn -2\" onClick={() =>deletePost(post)} >Delete</button> */}\n                                            </div>\n\n                                            <div class=\"col-sm\">\n                                            {comment.title}\n                                            </div>\n                                    \n                                            <div class=\"col-sm\">\n                                            {\n                                              <p><button className=\"btn me-2\" onClick={()=>{upvote(comment)}}>{comment.upvotes?.length}</button>\n                                              <button className=\"btn\" onClick={()=>{downvote(comment)}} >{comment.downvote?.length}</button>\n                                              </p>\n                                            }       \n                                            </div>\n\n                                            <div className=\"col\">\n\n                                            <div class=\"dropdown\">\n                                                    <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                                                        Replies\n                                                    </button>\n                                                    <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n                                                    \n                                                        {comment.replies?.map((rep, index)=>(\n                                                            <li className=\"dropdown-item\" >{rep.text}</li>\n                                                        ))}\n                                                    </ul>\n                                                    </div>\n\n                                            </div>\n                                            <div className=\"col\">\n                                            {/* onChange={(input) => setContent(input.target.value)} */}\n                                                <p><button className=\"btn\" onClick={()=>{addReplay(comment)}}>Add Replay</button>\n                                                <button className=\"btn mt-1 ps-4 pe-4\" onClick={()=>{alert(JSON.stringify(comment.Content))}}>See Content</button></p>\n                                                {/* <button className=\"btn\" onClick={()=>{addReplay(comment)}}>Add Replay</button> */}\n                                            </div>\n                                            <div className=\"col\">\n                                                { !button_reported(comment) && <button className=\"btn\" onClick={()=>{reportPost(comment)}}>Report</button>}\n                                                { button_reported(comment) && <button className=\"btn disabled\" onClick={()=>{reportPost(comment)}}>Report</button>}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    \n                                </li>\n                                </div>\n                            ))}\n                </div>      \n                </div>\n            )}\n\n        </div>\n    );\n}\n\nexport default Post_follower;","/home/user/Desktop/web development/React/A-full-stack-web-application/Codes/src/Followers_followings.js",[],[],{"ruleId":"103","severity":1,"message":"104","line":31,"column":53,"nodeType":"105","messageId":"106","endLine":31,"endColumn":67},{"ruleId":"103","severity":1,"message":"107","line":32,"column":55,"nodeType":"105","messageId":"106","endLine":32,"endColumn":71},{"ruleId":"108","severity":1,"message":"109","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":21},{"ruleId":"112","severity":1,"message":"113","line":33,"column":7,"nodeType":"114","endLine":33,"endColumn":14,"suggestions":"115"},{"ruleId":"112","severity":1,"message":"116","line":44,"column":7,"nodeType":"114","endLine":44,"endColumn":12,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":66,"column":13,"nodeType":"110","messageId":"120","endLine":66,"endColumn":18},{"ruleId":"108","severity":1,"message":"121","line":10,"column":11,"nodeType":"110","messageId":"111","endLine":10,"endColumn":20},{"ruleId":"112","severity":1,"message":"122","line":34,"column":7,"nodeType":"114","endLine":34,"endColumn":14,"suggestions":"123"},{"ruleId":"112","severity":1,"message":"124","line":38,"column":5,"nodeType":"114","endLine":38,"endColumn":12,"suggestions":"125"},{"ruleId":"112","severity":1,"message":"126","line":45,"column":7,"nodeType":"114","endLine":45,"endColumn":9,"suggestions":"127"},{"ruleId":"112","severity":1,"message":"128","line":61,"column":7,"nodeType":"114","endLine":61,"endColumn":21,"suggestions":"129"},{"ruleId":"103","severity":1,"message":"130","line":122,"column":22,"nodeType":"105","messageId":"106","endLine":122,"endColumn":45},{"ruleId":"108","severity":1,"message":"131","line":12,"column":8,"nodeType":"110","messageId":"111","endLine":12,"endColumn":11},{"ruleId":"108","severity":1,"message":"132","line":13,"column":16,"nodeType":"110","messageId":"111","endLine":13,"endColumn":24},{"ruleId":"112","severity":1,"message":"124","line":25,"column":7,"nodeType":"114","endLine":25,"endColumn":14,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":51,"column":36,"nodeType":"136","messageId":"137","endLine":51,"endColumn":38},{"ruleId":"138","severity":1,"message":"139","line":182,"column":41,"nodeType":"105","endLine":182,"endColumn":94},{"ruleId":"138","severity":1,"message":"139","line":183,"column":41,"nodeType":"105","endLine":183,"endColumn":94},{"ruleId":"138","severity":1,"message":"139","line":184,"column":41,"nodeType":"105","endLine":184,"endColumn":94},{"ruleId":"138","severity":1,"message":"139","line":185,"column":41,"nodeType":"105","endLine":185,"endColumn":94},{"ruleId":"108","severity":1,"message":"140","line":5,"column":10,"nodeType":"110","messageId":"111","endLine":5,"endColumn":23},{"ruleId":"108","severity":1,"message":"141","line":7,"column":12,"nodeType":"110","messageId":"111","endLine":7,"endColumn":14},{"ruleId":"112","severity":1,"message":"142","line":22,"column":9,"nodeType":"114","endLine":22,"endColumn":16,"suggestions":"143"},{"ruleId":"108","severity":1,"message":"144","line":51,"column":21,"nodeType":"110","messageId":"111","endLine":51,"endColumn":23},{"ruleId":"112","severity":1,"message":"124","line":41,"column":8,"nodeType":"114","endLine":41,"endColumn":15,"suggestions":"145"},"react/jsx-pascal-case","Imported JSX component Post_review must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Post_follower must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'followings'. Either include it or remove the dependency array.","ArrayExpression",["146"],"React Hook useEffect has missing dependencies: 'followings' and 'others'. Either include them or remove the dependency array.",["147"],"no-redeclare","'other' is already defined.","redeclared","'navigate2' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'vis'. Either include it or remove the dependency array.",["148"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["149"],"React Hook useEffect has a missing dependency: 'navigate2'. Either include it or remove the dependency array.",["150"],"React Hook useEffect has missing dependencies: 'getUserData.age', 'getUserData.contactnumber', 'getUserData.email', 'getUserData.firstname', 'getUserData.lastname', 'getUserData.location', 'getUserData.organistaion', and 'getUserData.username'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'sfn' needs the current value of 'getUserData.firstname'.",["151"],"Imported JSX component Followers_followings must be in PascalCase or SCREAMING_SNAKE_CASE","'got' is assigned a value but never used.","'setCount' is assigned a value but never used.",["152"],"array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'useTransition' is defined but never used.","'id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'idx'. Either include it or remove the dependency array.",["153"],"'to' is assigned a value but never used.",["154"],{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"161","fix":"167"},{"desc":"168","fix":"169"},{"desc":"161","fix":"170"},"Update the dependencies array to be: [count, followings]",{"range":"171","text":"172"},"Update the dependencies array to be: [all, followings, others]",{"range":"173","text":"174"},"Update the dependencies array to be: [count, vis]",{"range":"175","text":"176"},"Update the dependencies array to be: [count, id]",{"range":"177","text":"178"},"Update the dependencies array to be: [navigate2]",{"range":"179","text":"180"},"Update the dependencies array to be: [getUserData.age, getUserData.contactnumber, getUserData.email, getUserData.firstname, getUserData.lastname, getUserData.location, getUserData.organistaion, getUserData.username, isDataLoaded]",{"range":"181","text":"182"},{"range":"183","text":"178"},"Update the dependencies array to be: [count, idx]",{"range":"184","text":"185"},{"range":"186","text":"178"},[1073,1080],"[count, followings]",[1434,1439],"[all, followings, others]",[991,998],"[count, vis]",[1126,1133],"[count, id]",[1458,1460],"[navigate2]",[1975,1989],"[getUserData.age, getUserData.contactnumber, getUserData.email, getUserData.firstname, getUserData.lastname, getUserData.location, getUserData.organistaion, getUserData.username, isDataLoaded]",[624,631],[654,661],"[count, idx]",[1243,1250]]